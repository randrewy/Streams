language: cpp

git:
  depth: 5

sudo: required
dist: trusty

compiler:
  - clang
  - gcc

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - llvm-toolchain-precise-3.8
    packages:
    - gcc-5
    - g++-5
    - clang-3.8
    - libgtest-dev

install:
    - if [ "$CXX" = "g++" ]; then export CXX="g++-5" CC="gcc-5"; fi
    - if [ "$CXX" = "clang++" ]; then export CXX="clang++-3.8" CC="clang-3.8"; fi
    - "cd /usr/src/gtest && sudo cmake . && sudo make && sudo mv libg* /usr/local/lib/ ; cd -"

matrix:
  # ==[Coveralls]==

  include:TOKEN
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - ruby
          - gcc-5
          - g++-5
          - libgtest-dev
    install:
      - if [ "$CXX" = "g++" ]; then export CXX="g++-5" CC="gcc-5"; fi
      - "cd /usr/src/gtest && sudo cmake . && sudo make && sudo mv libg* /usr/local/lib/ ; cd -"
      - wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
      - tar xf lcov_1.11.orig.tar.gz
      - sudo make -C lcov-1.11/ install
      - gem install coveralls-lcov
    before_script:
      - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-5 90
      - if [ "$CXX" = "g++" ]; then export CXX="g++-5" CC="gcc-5"; fi
      - lcov --directory . --zerocounters
    after_success:
      - lcov --directory . --capture --output-file coverage.info # capture coverage info
      - lcov --remove coverage.info 'tests/*' '/usr/*' --output-file coverage.info # filter out system and test code
      - lcov --list coverage.info # debug before upload
      - coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info # uploads to coveralls

script:
  - cmake .
  - make
  - ctest -VV


